datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  ageCategory      String?
  birthDate        DateTime?
  club             String?
  country          String?
  createdAt        DateTime      @default(now())
  email            String?       @unique
  firstName        String?
  gender           String?
  id               String        @id @default(cuid())
  isVerified       Boolean?
  lastName         String?
  password         String
  passwordHash     String?
  region           String?
  roles            Json
  screenName       String?
  sportsLevel      String?
  updatedAt        DateTime      @updatedAt
  userClubs        UserClub[]
  userProfiles     UserProfile[]
  userRoles        UserRole[]
  username         String        @unique
  verificationCode String?
  weaponType       String?
}

model Role {
  createdAt   DateTime   @default(now())
  description String?
  id          String     @id @default(cuid())
  name        String?
  updatedAt   DateTime   @updatedAt
  userRoles   UserRole[]
}

model Club {
  createdAt DateTime   @default(now())
  id        String     @id @default(cuid())
  location  String?
  name      String?
  updatedAt DateTime   @updatedAt
  userClubs UserClub[]
}

model UserClub {
  club      Club?    @relation(fields: [clubId], references: [id])
  clubId    String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model UserProfile {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model UserRole {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  role      Role?    @relation(fields: [roleId], references: [id])
  roleId    String?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Competition {
  category   String?
  createdAt  DateTime  @default(now())
  date       DateTime?
  formula    String?
  gender     String?
  id         String    @id @default(cuid())
  name       String?
  owner      String?
  sportshall String?
  updatedAt  DateTime  @updatedAt
  weapon     String?
}

model SportsHall {
  address   String?
  city      String?
  country   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  shortName String?
  updatedAt DateTime @updatedAt
}

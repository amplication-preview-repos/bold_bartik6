/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SportsHall as PrismaSportsHall } from "@prisma/client";

export class SportsHallServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SportsHallCountArgs, "select">
  ): Promise<number> {
    return this.prisma.sportsHall.count(args);
  }

  async sportsHalls(
    args: Prisma.SportsHallFindManyArgs
  ): Promise<PrismaSportsHall[]> {
    return this.prisma.sportsHall.findMany(args);
  }
  async sportsHall(
    args: Prisma.SportsHallFindUniqueArgs
  ): Promise<PrismaSportsHall | null> {
    return this.prisma.sportsHall.findUnique(args);
  }
  async createSportsHall(
    args: Prisma.SportsHallCreateArgs
  ): Promise<PrismaSportsHall> {
    return this.prisma.sportsHall.create(args);
  }
  async updateSportsHall(
    args: Prisma.SportsHallUpdateArgs
  ): Promise<PrismaSportsHall> {
    return this.prisma.sportsHall.update(args);
  }
  async deleteSportsHall(
    args: Prisma.SportsHallDeleteArgs
  ): Promise<PrismaSportsHall> {
    return this.prisma.sportsHall.delete(args);
  }
}
